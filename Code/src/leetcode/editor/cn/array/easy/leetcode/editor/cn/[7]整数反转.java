package leetcode.editor.cn.array.easy.leetcode.editor.cn;
//给你一个 32 位的有符号整数 x ，返回将 x 中的数字部分反转后的结果。
//
// 如果反转后整数超过 32 位的有符号整数的范围 [−231, 231 − 1] ，就返回 0。 
//假设环境不允许存储 64 位整数（有符号或无符号）。
//
// 
//
// 示例 1： 
//
// 
//输入：x = 123
//输出：321
// 
//
// 示例 2： 
//
// 
//输入：x = -123
//输出：-321
// 
//
// 示例 3： 
//
// 
//输入：x = 120
//输出：21
// 
//
// 示例 4： 
//
// 
//输入：x = 0
//输出：0
// 
//
// 
//
// 提示： 
//
// 
// -231 <= x <= 231 - 1 
// 
// Related Topics 数学 
// 👍 2711 👎 0


/**
 * 解题思路:
 * 每次将x%10 得到x最后一位数
 * 例:
 * 第一次:
 * x = 654
 * result = result * 10 + x % 10 =  0+4 = 4
 * x = x / 10 = 65
 * <p>
 * 第二次:
 * x = 65
 * result = result * 10 + x % 10 =  40+5 = 45
 * x =  x / 10 = 6
 * <p>
 * 第三次:
 * x = 6
 * result = result * 10 + x % 10 =  450 + 6 = 456
 * x =  x / 10 = 0
 * 退出循环, 结果为456
 * <p>
 * <p>
 * 运行结果:
 * <p>
 * 执行用时：1 ms, 在所有 Java 提交中击败了100.00%的用户
 * 内存消耗：35.5 MB, 在所有 Java 提交中击败了70.30%的用户
 */
class Reverse {
    public int reverse(int x) {
        int result = 0;
        while (x != 0) {
            //如果result * 10 / 10 != result 证明反转这个x会产生溢出, 直接返回0
            if (result * 10 / 10 != result) {
                return 0;
            }
            result = result * 10 + x % 10;
            x = x / 10;
        }
        return result;
    }
}

