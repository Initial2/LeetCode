class linkdelist.linkdelist.linkdelist.linkdelist.linkdelist.Solution {
    
   
    public  String addBinary(String a, String b) {
        //获取它俩最后一位索引
        int aLastIndex = a.length()-1;
        int bLastIndex = b.length()-1;
    
        StringBuilder result = new StringBuilder();
        
        int flag = 0;
        while(aLastIndex >= 0 && bLastIndex >= 0 ){
    
            int i = Integer.parseInt(String.valueOf(a.charAt(aLastIndex)));
            int j = Integer.parseInt(String.valueOf(b.charAt(bLastIndex)));
    
            if ((i + j +  flag) < 2 ){
                int num =(i + j +  flag) % 2;
                result.append(num);
                flag = 0;
            }else{
                int num = (i + j +  flag) % 2;
                result.append(num);
                flag = 1;
            }
            aLastIndex--;
            bLastIndex--;
            
        }
    
    
        if (aLastIndex >= 0){
            while(aLastIndex >= 0){
                int i = Integer.parseInt(String.valueOf(a.charAt(aLastIndex)));
                if (i + flag < 2){
                    int num =(i + flag) % 2;
                    result.append(num);
                    flag = 0;
                }else{
                    result.append("0");
                    flag = 1;
                }
                aLastIndex--;
            }
    
    
    
        }
        
        if (bLastIndex >= 0){
            while(bLastIndex >= 0){
                int j = Integer.parseInt(String.valueOf(b.charAt(bLastIndex)));
                if (j + flag < 2){
                    int num =(j + flag ) % 2;
                    result.append(num);
                    flag = 0;
                }else{
                    result.append("0");
                    flag = 1;
                }
                bLastIndex--;
            }
        
        
        }
        
        if (flag == 1){
            result.append("1");
        }
        
        return result.reverse().toString();
    }
}

//runtime:3 ms
//memory:38.3 MB
